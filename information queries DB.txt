information queries 

1st information query

Purpose: List the program that are available in the college and total number of students enrolled in each of the programs.

SELECT p.Program_ID, p.Program_Name, COUNT(s.Student_ID) AS Total_Students
FROM Programm p
LEFT JOIN Student s ON p.Program_ID = s.Program_ID
GROUP BY p.Program_ID, p.Program_Name;


2nd information query

Purpose: List all the announcements made for a particular module starting from 1st May 2024 to 28th May 2024.

SELECT a.announcement_id, a.an_title, a.an_date, a.module_id
FROM Announcement a
WHERE a.an_date BETWEEN TO_DATE('2024-05-01', 'YYYY-MM-DD') 
                    AND TO_DATE('2024-05-28', 'YYYY-MM-DD')
ORDER BY a.an_date;


3rd information query

Purpose: List the names of all modules that begin with the letter 'D', along with the total number of resources uploaded for those modules.

SELECT m.module_name, COUNT(r.resource_id) AS total_resources
FROM Module m
JOIN Module_Resources mr ON m.module_id = mr.module_id
JOIN Resources r ON mr.resource_id = r.resource_id
WHERE m.module_name LIKE 'D%'  -- Modules starting with 'D'
GROUP BY m.module_name
ORDER BY m.module_name;


4th information query

Purpose: List the names of all students along with their enrolled program who have not submitted any assessments for a particular module

SELECT DISTINCT s.student_id,
                s.first_name,
                s.last_name,
                p.program_name,
                m.module_name
FROM Student s
JOIN Programm p ON s.program_id = p.program_id
JOIN Student_Module sm ON s.student_id = sm.student_id
JOIN Module m ON sm.module_id = m.module_id
LEFT JOIN Module_Assessment ma ON m.module_id = ma.module_id
LEFT JOIN Result r ON ma.assessment_id = r.assessment_id AND r.student_id = s.student_id
WHERE r.result_id IS NULL OR ma.assessment_id IS NULL
ORDER BY s.last_name, s.first_name, p.program_name, m.module_name;


5th information query

Purpose: List all the teachers who teach more than one module.

SELECT t.teacher_name, COUNT(m.module_id) AS num_modules
FROM Teacher t
JOIN Module m ON t.teacher_id = m.teacher_id
GROUP BY t.teacher_name
HAVING COUNT(m.module_id) > 1
ORDER BY t.teacher_name;
